# python Backend
frontend/node_modules/
frontend/dist/
frontend/.next/

# python Backend
# Byte-compiled / optimized / DLL files
python-backend/__pycache__/
python-backend/*.py[cod]
python-backend/*$py.class
python-backend/venv/
python-backend/venv.bak/
python-backend/uploads/
node_modules/

# C extensions
python-backend/*.so

# Distribution / packaging
.Python
python-backend/build/
python-backend/develop-eggs/
python-backend/dist/
python-backend/downloads/
python-backend/eggs/
python-backend/.eggs/
python-backend/lib/
python-backend/lib64/
python-backend/parts/
python-backend/sdist/
python-backend/var/
python-backend/wheels/
python-backend/pip-wheel-metadata/
python-backend/share/python-wheels/
python-backend/*.egg-info/
python-backend/.installed.cfg
python-backend/*.egg
python-backend/MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
python-backend/*.manifest
python-backend/*.spec

# Installer logs
python-backend/pip-log.txt
python-backend/pip-delete-this-directory.txt

# Unit test / coverage reports
python-backend/htmlcov/
python-backend/.tox/
python-backend/.nox/
python-backend/.coverage
python-backend/.coverage.*
python-backend/.cache
python-backend/nosetests.xml
python-backend/coverage.xml
python-backend/*.cover
python-backend/*.py,cover
python-backend/.hypothesis/
python-backend/.pytest_cache/

# Translations
python-backend/*.mo
python-backend/*.pot

# Django stuff:
python-backend/*.log
python-backend/local_settings.py
python-backend/db.sqlite3
python-backend/db.sqlite3-journal

# Flask stuff:
python-backend/instance/
python-backend/.webassets-cache

# Scrapy stuff:
python-backend/.scrapy

# Sphinx documentation
python-backend/docs/_build/

# PyBuilder
python-backend/target/

# Jupyter Notebook
python-backend/.ipynb_checkpoints

# IPython
python-backend/profile_default/
python-backend/ipython_config.py

# pyenv
python-backend/.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
python-backend/__pypackages__/

# Celery stuff
python-backend/celerybeat-schedule
python-backend/celerybeat.pid

# SageMath parsed files
python-backend/*.sage.py

# Environments
python-backend/.env
python-backend/.venv
python-backend/env/
python-backend/venv/
ENV/
python-backend/env.bak/
python-backend/venv.bak/

# Spyder project settings
python-backend/.spyderproject
python-backend/.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
python-backend/site

# mypy
.mypy_cache/
python-backend/.dmypy.json
python-backend/dmypy.json

# Pyre type checker
python-backend/.pyre/

# IDE
.vscode/
.idea/
*.swp
*.swo
*~

# OS
.DS_Store
Thumbs.db

# FastAPI specific
.env.local
.env.development
.env.test
.env.production

# Supabase
.supabase/ 

# Mongo Backend
mongo-backend/node_modules/
mongo-backend/dist/
mongo-backend/.env
mongo-backend/.next/
mongo-backend/build/
mongo-backend/develop-eggs/
mongo-backend/dist/
mongo-backend/downloads/
mongo-backend/eggs/
mongo-backend/.eggs/