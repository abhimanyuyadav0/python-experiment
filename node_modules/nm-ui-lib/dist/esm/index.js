import React from 'react';

function styleInject(css, ref) {
  if ( ref === void 0 ) ref = {};
  var insertAt = ref.insertAt;

  if (typeof document === 'undefined') { return; }

  var head = document.head || document.getElementsByTagName('head')[0];
  var style = document.createElement('style');
  style.type = 'text/css';

  if (insertAt === 'top') {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }

  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}

var css_248z = ".uilib-flex {\n    display: flex\n}\n.uilib-w-full {\n    width: 100%\n}\n.uilib-flex-row-reverse {\n    flex-direction: row-reverse\n}\n.uilib-items-center {\n    align-items: center\n}\n.uilib-justify-center {\n    justify-content: center\n}\n.uilib-rounded {\n    border-radius: 0.25rem\n}\n.uilib-rounded-\\[42px\\] {\n    border-radius: 42px\n}\n.uilib-border {\n    border-width: 1px\n}\n.uilib-border-solid {\n    border-style: solid\n}\n.uilib-border-nmGray-100 {\n    --tw-border-opacity: 1;\n    border-color: rgb(246 248 249 / var(--tw-border-opacity, 1))\n}\n.uilib-border-nmGray-300 {\n    --tw-border-opacity: 1;\n    border-color: rgb(225 231 234 / var(--tw-border-opacity, 1))\n}\n.uilib-border-nmGray-500 {\n    --tw-border-opacity: 1;\n    border-color: rgb(203 213 219 / var(--tw-border-opacity, 1))\n}\n.uilib-bg-betaCom {\n    --tw-bg-opacity: 1;\n    background-color: rgb(221 85 53 / var(--tw-bg-opacity, 1))\n}\n.uilib-bg-nmGray-100 {\n    --tw-bg-opacity: 1;\n    background-color: rgb(246 248 249 / var(--tw-bg-opacity, 1))\n}\n.uilib-bg-transparent {\n    background-color: transparent\n}\n.uilib-p-3 {\n    padding: 0.75rem\n}\n.uilib-px-12 {\n    padding-left: 3rem;\n    padding-right: 3rem\n}\n.uilib-px-3 {\n    padding-left: 0.75rem;\n    padding-right: 0.75rem\n}\n.uilib-px-6 {\n    padding-left: 1.5rem;\n    padding-right: 1.5rem\n}\n.uilib-py-4 {\n    padding-top: 1rem;\n    padding-bottom: 1rem\n}\n.uilib-text-sm {\n    font-size: 0.875rem;\n    line-height: 1.25rem\n}\n.uilib-text-xs {\n    font-size: 0.75rem;\n    line-height: 1rem\n}\n.uilib-font-medium {\n    font-weight: 500\n}\n.uilib-leading-none {\n    line-height: 1\n}\n.uilib-tracking-normal {\n    letter-spacing: 0em\n}\n.uilib-text-black {\n    --tw-text-opacity: 1;\n    color: rgb(0 0 0 / var(--tw-text-opacity, 1))\n}\n.uilib-text-gray-50 {\n    --tw-text-opacity: 1;\n    color: rgb(249 250 251 / var(--tw-text-opacity, 1))\n}\n.uilib-text-nmGray-900 {\n    --tw-text-opacity: 1;\n    color: rgb(35 45 51 / var(--tw-text-opacity, 1))\n}\n.hover\\:uilib-border-slate-500:hover {\n    --tw-border-opacity: 1;\n    border-color: rgb(100 116 139 / var(--tw-border-opacity, 1))\n}\n.hover\\:uilib-bg-nm-900:hover {\n    --tw-bg-opacity: 1;\n    background-color: rgb(56 14 0 / var(--tw-bg-opacity, 1))\n}\n.hover\\:uilib-bg-nmGray-300:hover {\n    --tw-bg-opacity: 1;\n    background-color: rgb(225 231 234 / var(--tw-bg-opacity, 1))\n}\n.hover\\:uilib-text-nmGray-700:hover {\n    --tw-text-opacity: 1;\n    color: rgb(104 134 151 / var(--tw-text-opacity, 1))\n}\n.disabled\\:uilib-cursor-not-allowed:disabled {\n    cursor: not-allowed\n}\n.disabled\\:uilib-bg-nmGray-100:disabled {\n    --tw-bg-opacity: 1;\n    background-color: rgb(246 248 249 / var(--tw-bg-opacity, 1))\n}\n.disabled\\:uilib-text-nmGray-700:disabled {\n    --tw-text-opacity: 1;\n    color: rgb(104 134 151 / var(--tw-text-opacity, 1))\n}\n.disabled\\:uilib-text-nmGray-900:disabled {\n    --tw-text-opacity: 1;\n    color: rgb(35 45 51 / var(--tw-text-opacity, 1))\n}\n.disabled\\:uilib-text-opacity-50:disabled {\n    --tw-text-opacity: 0.5\n}\n.disabled\\:hover\\:uilib-border-nmGray-500:hover:disabled {\n    --tw-border-opacity: 1;\n    border-color: rgb(203 213 219 / var(--tw-border-opacity, 1))\n}\n.disabled\\:hover\\:uilib-bg-nmGray-100:hover:disabled {\n    --tw-bg-opacity: 1;\n    background-color: rgb(246 248 249 / var(--tw-bg-opacity, 1))\n}\n";
styleInject(css_248z);

/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise, SuppressedError, Symbol, Iterator */


function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
    var e = new Error(message);
    return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
};

function getDefaultExportFromCjs (x) {
	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
}

var classnames = {exports: {}};

/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/

var hasRequiredClassnames;

function requireClassnames () {
	if (hasRequiredClassnames) return classnames.exports;
	hasRequiredClassnames = 1;
	(function (module) {
		/* global define */

		(function () {

			var hasOwn = {}.hasOwnProperty;

			function classNames () {
				var classes = '';

				for (var i = 0; i < arguments.length; i++) {
					var arg = arguments[i];
					if (arg) {
						classes = appendClass(classes, parseValue(arg));
					}
				}

				return classes;
			}

			function parseValue (arg) {
				if (typeof arg === 'string' || typeof arg === 'number') {
					return arg;
				}

				if (typeof arg !== 'object') {
					return '';
				}

				if (Array.isArray(arg)) {
					return classNames.apply(null, arg);
				}

				if (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {
					return arg.toString();
				}

				var classes = '';

				for (var key in arg) {
					if (hasOwn.call(arg, key) && arg[key]) {
						classes = appendClass(classes, key);
					}
				}

				return classes;
			}

			function appendClass (value, newClass) {
				if (!newClass) {
					return value;
				}
			
				if (value) {
					return value + ' ' + newClass;
				}
			
				return value + newClass;
			}

			if (module.exports) {
				classNames.default = classNames;
				module.exports = classNames;
			} else {
				window.classNames = classNames;
			}
		}()); 
	} (classnames));
	return classnames.exports;
}

var classnamesExports = requireClassnames();
var classNames = /*@__PURE__*/getDefaultExportFromCjs(classnamesExports);

const ButtonContent = ({ label, icon, iconPosition, success, hasSuccess, pending }) => {
    if (pending) {
        return (React.createElement("div", { className: "uilib-px-12" },
            React.createElement("div", { className: "uilib-pending" })));
    }
    else if (success && hasSuccess) {
        return (React.createElement("div", { className: classNames({
                "uilib-flex uilib-items-center": true,
                "uilib-flex-row-reverse": iconPosition === "right",
            }) },
            success.icon,
            React.createElement("span", { className: "uilib-px-3" }, success.label)));
    }
    else {
        return (React.createElement("div", { className: classNames({
                "uilib-flex uilib-items-center": true,
                "uilib-flex-row-reverse": iconPosition === "right",
            }) },
            icon,
            React.createElement("span", { className: "uilib-px-3" }, label)));
    }
};
const Button = (_a) => {
    var { label, fullWidth, icon, iconPosition = "left", isSmall, variant = "primary", success, hasSuccess, pending, disabled } = _a, props = __rest(_a, ["label", "fullWidth", "icon", "iconPosition", "isSmall", "variant", "success", "hasSuccess", "pending", "disabled"]);
    return (React.createElement("button", Object.assign({ className: classNames({
            "uilib-flex uilib-items-center uilib-justify-center uilib-rounded uilib-text-sm uilib-font-medium uilib-leading-none uilib-tracking-normal disabled:uilib-cursor-not-allowed disabled:uilib-text-opacity-50 ": true,
            "uilib-w-full": fullWidth,
            "uilib-bg-betaCom uilib-text-gray-50 hover:uilib-bg-nm-900 disabled:uilib-bg-nmGray-100 disabled:uilib-text-nmGray-700 disabled:hover:uilib-bg-nmGray-100": variant === "primary",
            "uilib-border-nmGray-100 uilib-bg-nmGray-100 uilib-text-black hover:uilib-bg-nmGray-300 disabled:hover:uilib-bg-nmGray-100": variant === "secondary",
            "uilib-border uilib-border-solid uilib-border-nmGray-500 uilib-bg-transparent uilib-text-black hover:uilib-border-slate-500 disabled:uilib-text-nmGray-700 disabled:hover:uilib-border-nmGray-500": variant === "tertiary",
            "uilib-bg-transparent uilib-text-black hover:uilib-text-nmGray-700 disabled:uilib-text-nmGray-900": variant === "text",
            "uilib-rounded-[42px] uilib-border uilib-border-nmGray-300 hover:uilib-bg-nmGray-300 disabled:hover:uilib-bg-nmGray-100": variant === "backButton",
            "uilib-px-6 uilib-py-4": !isSmall,
            "uilib-p-3 uilib-text-xs": isSmall,
        }), 
        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing
        disabled: disabled || pending }, props),
        React.createElement(ButtonContent, { label: label, icon: icon, iconPosition: iconPosition, pending: pending, success: success, hasSuccess: hasSuccess })));
};

export { Button };
//# sourceMappingURL=index.js.map
