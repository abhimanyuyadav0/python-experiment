{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/Desktop/abhimanyu/python-experiment/frontend/src/lib/api/axois.ts"],"sourcesContent":["import axois from \"axios\";\r\nimport { refreshToken as refreshTokenApi } from \"./services/userServices\";\r\n\r\nconst axoisInstance = axois.create({\r\n  baseURL: process.env.NEXT_PUBLIC_API_BASE_URL,\r\n  headers: {\r\n    \"centent-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\naxoisInstance.interceptors.request.use(\r\n  (config) => {\r\n    const tokenDataStr = typeof window !== \"undefined\" ? localStorage.getItem(\"tokenData\") : null;\r\n    if (tokenDataStr) {\r\n      try {\r\n        const tokenData = JSON.parse(tokenDataStr);\r\n        if (Date.now() <= tokenData.expiresAt) {\r\n          config.headers.Authorization = `Bearer ${tokenData.token}`;\r\n        }\r\n      } catch (error) {\r\n        console.error('Error parsing token data:', error);\r\n      }\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\nlet isRefreshing = false;\r\nlet failedQueue: any[] = [];\r\n\r\nfunction processQueue(error: any, token: string | null = null) {\r\n  failedQueue.forEach((prom) => {\r\n    if (error) {\r\n      prom.reject(error);\r\n    } else {\r\n      prom.resolve(token);\r\n    }\r\n  });\r\n  failedQueue = [];\r\n}\r\n\r\naxoisInstance.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    const originalRequest = error.config;\r\n    if (error.response && error.response.status === 401 && !originalRequest._retry) {\r\n      if (isRefreshing) {\r\n        return new Promise(function (resolve, reject) {\r\n          failedQueue.push({ resolve, reject });\r\n        })\r\n          .then((token) => {\r\n            originalRequest.headers[\"Authorization\"] = \"Bearer \" + token;\r\n            return axoisInstance(originalRequest);\r\n          })\r\n          .catch((err) => Promise.reject(err));\r\n      }\r\n      originalRequest._retry = true;\r\n      isRefreshing = true;\r\n      // Token expired, redirect to login\r\n      localStorage.removeItem(\"tokenData\");\r\n      localStorage.removeItem(\"user\");\r\n      window.location.href = \"/auth/login\";\r\n      return Promise.reject(error);\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axoisInstance;\r\n"],"names":[],"mappings":";;;AAIW;AAJX;;AAGA,MAAM,gBAAgB,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACjC,OAAO;IACP,SAAS;QACP,gBAAgB;IAClB;AACF;AAEA,cAAc,YAAY,CAAC,OAAO,CAAC,GAAG,CACpC,CAAC;IACC,MAAM,eAAe,uCAAgC,aAAa,OAAO,CAAC,eAAe;IACzF,IAAI,cAAc;QAChB,IAAI;YACF,MAAM,YAAY,KAAK,KAAK,CAAC;YAC7B,IAAI,KAAK,GAAG,MAAM,UAAU,SAAS,EAAE;gBACrC,OAAO,OAAO,CAAC,aAAa,GAAG,AAAC,UAAyB,OAAhB,UAAU,KAAK;YAC1D;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,6BAA6B;QAC7C;IACF;IACA,OAAO;AACT,GACA,CAAC,QAAU,QAAQ,MAAM,CAAC;AAG5B,IAAI,eAAe;AACnB,IAAI,cAAqB,EAAE;AAE3B,SAAS,aAAa,KAAU;QAAE,QAAA,iEAAuB;IACvD,YAAY,OAAO,CAAC,CAAC;QACnB,IAAI,OAAO;YACT,KAAK,MAAM,CAAC;QACd,OAAO;YACL,KAAK,OAAO,CAAC;QACf;IACF;IACA,cAAc,EAAE;AAClB;AAEA,cAAc,YAAY,CAAC,QAAQ,CAAC,GAAG,CACrC,CAAC,WAAa,UACd,OAAO;IACL,MAAM,kBAAkB,MAAM,MAAM;IACpC,IAAI,MAAM,QAAQ,IAAI,MAAM,QAAQ,CAAC,MAAM,KAAK,OAAO,CAAC,gBAAgB,MAAM,EAAE;QAC9E,IAAI,cAAc;YAChB,OAAO,IAAI,QAAQ,SAAU,OAAO,EAAE,MAAM;gBAC1C,YAAY,IAAI,CAAC;oBAAE;oBAAS;gBAAO;YACrC,GACG,IAAI,CAAC,CAAC;gBACL,gBAAgB,OAAO,CAAC,gBAAgB,GAAG,YAAY;gBACvD,OAAO,cAAc;YACvB,GACC,KAAK,CAAC,CAAC,MAAQ,QAAQ,MAAM,CAAC;QACnC;QACA,gBAAgB,MAAM,GAAG;QACzB,eAAe;QACf,mCAAmC;QACnC,aAAa,UAAU,CAAC;QACxB,aAAa,UAAU,CAAC;QACxB,OAAO,QAAQ,CAAC,IAAI,GAAG;QACvB,OAAO,QAAQ,MAAM,CAAC;IACxB;IACA,OAAO,QAAQ,MAAM,CAAC;AACxB;uCAGa","debugId":null}},
    {"offset": {"line": 80, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/Desktop/abhimanyu/python-experiment/frontend/src/lib/api/services/userServices/index.ts"],"sourcesContent":["import axoisInstance from \"../../axois\";\r\n\r\nexport const getUser = (id: string) => axoisInstance.get(`/api/v1/users/${id}`);\r\nexport const loginUser = (data: { email: string; password: string }) => {\r\n  return axoisInstance.post(`/api/v1/users/authenticate`, data);\r\n};\r\n\r\nexport const refreshToken = (data: { refresh_token: string }) => {\r\n  return axoisInstance.post(\"/auth/refresh\", data);\r\n};\r\n\r\nexport const forgetPassword = (data: { email: string | null }) => {\r\n  return axoisInstance.post(\"/auth/forgot-password\", data);\r\n};\r\n\r\nexport const resetPassword = (data: {\r\n  token: string | null;\r\n  confirm_password: string | null;\r\n  new_password: string | null;\r\n}) => {\r\n  return axoisInstance.post(\"/auth/reset-password\", data);\r\n};\r\n\r\nexport const signupUser = (data: { name: string; email: string; password: string; is_active: boolean; role?: 'admin' | 'tenant' | 'user' }) => {\r\n  return axoisInstance.post(\"/api/v1/users/\", data);\r\n};\r\n\r\nexport const getAllUsers = () => axoisInstance.get(\"/api/v1/users/\");\r\nexport const deleteUser = (id: string) =>\r\n  axoisInstance.delete(`/api/v1/users/${id}`);\r\n"],"names":[],"mappings":";;;;;;;;;;AAAA;;AAEO,MAAM,UAAU,CAAC,KAAe,6HAAA,CAAA,UAAa,CAAC,GAAG,CAAC,AAAC,iBAAmB,OAAH;AACnE,MAAM,YAAY,CAAC;IACxB,OAAO,6HAAA,CAAA,UAAa,CAAC,IAAI,CAAE,8BAA6B;AAC1D;AAEO,MAAM,eAAe,CAAC;IAC3B,OAAO,6HAAA,CAAA,UAAa,CAAC,IAAI,CAAC,iBAAiB;AAC7C;AAEO,MAAM,iBAAiB,CAAC;IAC7B,OAAO,6HAAA,CAAA,UAAa,CAAC,IAAI,CAAC,yBAAyB;AACrD;AAEO,MAAM,gBAAgB,CAAC;IAK5B,OAAO,6HAAA,CAAA,UAAa,CAAC,IAAI,CAAC,wBAAwB;AACpD;AAEO,MAAM,aAAa,CAAC;IACzB,OAAO,6HAAA,CAAA,UAAa,CAAC,IAAI,CAAC,kBAAkB;AAC9C;AAEO,MAAM,cAAc,IAAM,6HAAA,CAAA,UAAa,CAAC,GAAG,CAAC;AAC5C,MAAM,aAAa,CAAC,KACzB,6HAAA,CAAA,UAAa,CAAC,MAAM,CAAC,AAAC,iBAAmB,OAAH","debugId":null}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/Desktop/abhimanyu/python-experiment/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, {\r\n  createContext,\r\n  useContext,\r\n  useState,\r\n  useEffect,\r\n  ReactNode,\r\n} from \"react\";\r\nimport { loginUser, signupUser } from \"@/lib/api/services/userServices\";\r\nimport { useRouter } from \"next/navigation\";\r\n\r\ninterface User {\r\n  id: number;\r\n  name: string;\r\n  email: string;\r\n  is_active: boolean;\r\n  role: \"admin\" | \"tenant\" | \"user\";\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\ninterface TokenData {\r\n  token: string;\r\n  expiresAt: number;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  isAuthenticated: boolean;\r\n  isLoading: boolean;\r\n  token: string | null;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  signup: (\r\n    name: string,\r\n    email: string,\r\n    password: string,\r\n    role?: \"admin\" | \"tenant\" | \"user\"\r\n  ) => Promise<void>;\r\n  logout: () => void;\r\n  isAdmin: () => boolean;\r\n  isTenant: () => boolean;\r\n  isUser: () => boolean;\r\n  hasRole: (role: \"admin\" | \"tenant\" | \"user\") => boolean;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useAuth must be used within an AuthProvider\");\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [token, setToken] = useState<string | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const router = useRouter();\r\n  // Token management functions\r\n  const saveToken = (token: string, expiresAt: number) => {\r\n    const tokenData: TokenData = { token, expiresAt };\r\n    localStorage.setItem(\"tokenData\", JSON.stringify(tokenData));\r\n    setToken(token);\r\n  };\r\n\r\n  const getToken = (): string | null => {\r\n    const tokenDataStr = localStorage.getItem(\"tokenData\");\r\n    if (!tokenDataStr) return null;\r\n\r\n    try {\r\n      const tokenData: TokenData = JSON.parse(tokenDataStr);\r\n      if (Date.now() > tokenData.expiresAt) {\r\n        // Token expired\r\n        localStorage.removeItem(\"tokenData\");\r\n        localStorage.removeItem(\"user\");\r\n        setToken(null);\r\n        setUser(null);\r\n        return null;\r\n      }\r\n      return tokenData.token;\r\n    } catch (error) {\r\n      console.error(\"Error parsing token data:\", error);\r\n      localStorage.removeItem(\"tokenData\");\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const clearToken = () => {\r\n    localStorage.removeItem(\"tokenData\");\r\n    localStorage.removeItem(\"user\");\r\n    setToken(null);\r\n    setUser(null);\r\n    router.push(\"/auth/login\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Check if user is logged in on app start\r\n    const currentToken = getToken();\r\n    const userData = localStorage.getItem(\"user\");\r\n\r\n    if (currentToken && userData) {\r\n      try {\r\n        setUser(JSON.parse(userData));\r\n        setToken(currentToken);\r\n      } catch (error) {\r\n        console.error(\"Error parsing user data:\", error);\r\n        clearToken();\r\n      }\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  // Check token expiration every minute\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const currentToken = getToken();\r\n      if (!currentToken && user) {\r\n        clearToken();\r\n      }\r\n    }, 60000); // Check every minute\r\n\r\n    return () => clearInterval(interval);\r\n  }, [user]);\r\n  const redirectToDashboard = (role: \"admin\" | \"tenant\" | \"user\") => {\r\n    if (role === \"admin\") {\r\n      router.push(\"/admin/dashboard\");\r\n    } else if (role === \"tenant\") {\r\n      router.push(\"/tenant\");\r\n    } else if (role === \"user\") {\r\n      router.push(\"/user\");\r\n    }\r\n  };\r\n  const login = async (email: string, password: string) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await loginUser({ email, password });\r\n\r\n      if (response.data) {\r\n        const { user: userData, token, expires_at } = response.data;\r\n        setUser(userData);\r\n        localStorage.setItem(\"user\", JSON.stringify(userData));\r\n\r\n        // Save token with expiration (convert seconds to milliseconds)\r\n        const expiresAtMs = expires_at * 1000;\r\n        saveToken(token, expiresAtMs);\r\n        redirectToDashboard(userData.role);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Login error:\", error);\r\n      throw error;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const signup = async (\r\n    name: string,\r\n    email: string,\r\n    password: string,\r\n    role: \"admin\" | \"tenant\" | \"user\" = \"user\"\r\n  ) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await signupUser({\r\n        name,\r\n        email,\r\n        password,\r\n        is_active: true,\r\n        role,\r\n      });\r\n\r\n      if (response.data) {\r\n        const userData = response.data;\r\n        setUser(userData);\r\n        localStorage.setItem(\"user\", JSON.stringify(userData));\r\n        const expiresAt = Date.now() + 5 * 60 * 1000; // 5 minutes from now\r\n        const token = `token_${Date.now()}_${Math.random()\r\n          .toString(36)\r\n          .substr(2, 9)}`;\r\n        saveToken(token, expiresAt);\r\n        redirectToDashboard(userData.role);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Signup error:\", error);\r\n      throw error;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    clearToken();\r\n  };\r\n\r\n  const value: AuthContextType = {\r\n    user,\r\n    isAuthenticated: !!user,\r\n    isLoading,\r\n    token,\r\n    login,\r\n    signup,\r\n    logout,\r\n    isAdmin: () => user?.role === \"admin\",\r\n    isTenant: () => user?.role === \"tenant\",\r\n    isUser: () => user?.role === \"user\",\r\n    hasRole: (role) => user?.role === role,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n"],"names":[],"mappings":"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","debugId":null}}]
}